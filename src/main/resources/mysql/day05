1.表设计之关联关系
	*一对一
		什么是一对一：有AB两张表，A表中一条数据对应B表中的一条数据，
					同时B表中一条数据也对应A表中的一条数据
		应用场景：用户表和用户信息扩展表，商品表和商品信息扩展表
		如何建立关系：在从表中添加外键字段指向主表的主键
		例如：创建user（id,username,password）和userinfo(user_id,nick,loc)
	*一对多
		什么是一对多：有AB两张表：A表中一条数据对应B表的多条数据，
					同时B表中的一条数据对应A表的一条数据
		场景： 员工表和部门表 商品表和商品分类表
		如何建立关系：在多的表中添加外键指向另外一张表的主键
		例如：创建temp(id,name,deptid)和tdept(id,name)
	*多对多
		什么是多对多：有AB两张表，A表中一条数据对应B表的多条数据，
					同时B表的一条数据对应A表的多条，称为多对多
		应用场景： 老师和学生
		如何建立关系：创建第三张关系表，在关系表中有两个字段指向另外两个表的主键
		例如：创建老师表teacher(id,name)和学生表student(id,name)和关系表t_s(tid,sid)

2.视图
	什么是视图：视图和表都是数据库中的对象，视图可以理解成是一张虚拟的表，
		视图本质就是取代了一段SQL查询语句。
	为什么使用视图：使用视图可以起到SQL语句重用的作用，提高开发效率，还可以隐藏敏感信息
	
	*创建视图格式： create view 视图名 as (子查询);
		创建10号部门员工的视图 
		create view vemp10 as (select * from emp where deptno=10);














